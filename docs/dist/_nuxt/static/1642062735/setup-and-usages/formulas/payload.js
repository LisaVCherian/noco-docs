__NUXT_JSONP__("/setup-and-usages/formulas", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$){return {data:[{document:{slug:"formulas",description:t,title:t,position:43,category:"Usage",menuTitle:t,toc:[{id:y,depth:z,text:A},{id:B,depth:o,text:C},{id:D,depth:o,text:E},{id:F,depth:o,text:G},{id:H,depth:o,text:I},{id:J,depth:o,text:K},{id:L,depth:z,text:M},{id:N,depth:o,text:O},{id:P,depth:o,text:Q},{id:R,depth:o,text:S}],body:{type:"root",children:[{type:a,tag:T,props:{id:y},children:[{type:a,tag:i,props:{ariaHidden:j,href:"#adding-formula-column",tabIndex:k},children:[{type:a,tag:l,props:{className:[m,n]},children:[]}]},{type:b,value:A}]},{type:b,value:g},{type:a,tag:"p",props:{},children:[{type:a,tag:"img",props:{alt:"Formula",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F86527202\u002F144246227-42c44df6-7e3e-4b2c-9bb9-a3c213bcad20.png"},children:[]}]},{type:b,value:g},{type:a,tag:p,props:{id:B},children:[{type:a,tag:i,props:{ariaHidden:j,href:"#1-click-on--add-column",tabIndex:k},children:[{type:a,tag:l,props:{className:[m,n]},children:[]}]},{type:b,value:C}]},{type:b,value:g},{type:a,tag:p,props:{id:D},children:[{type:a,tag:i,props:{ariaHidden:j,href:"#2-populate-column-name",tabIndex:k},children:[{type:a,tag:l,props:{className:[m,n]},children:[]}]},{type:b,value:E}]},{type:b,value:g},{type:a,tag:p,props:{id:F},children:[{type:a,tag:i,props:{ariaHidden:j,href:"#3-select-column-type-as-formula",tabIndex:k},children:[{type:a,tag:l,props:{className:[m,n]},children:[]}]},{type:b,value:G}]},{type:b,value:g},{type:a,tag:p,props:{id:H},children:[{type:a,tag:i,props:{ariaHidden:j,href:"#4-insert-required-formula",tabIndex:k},children:[{type:a,tag:l,props:{className:[m,n]},children:[]}]},{type:b,value:I}]},{type:b,value:g},{type:a,tag:"ul",props:{},children:[{type:b,value:g},{type:a,tag:r,props:{},children:[{type:b,value:"Can use column names in equation"}]},{type:b,value:g},{type:a,tag:r,props:{},children:[{type:b,value:"Can use explicit numberical values\u002F strings as needed"}]},{type:b,value:g},{type:a,tag:r,props:{},children:[{type:b,value:"Table below lists supported formula & associated syntax"}]},{type:b,value:g},{type:a,tag:r,props:{},children:[{type:b,value:"Nested formula (formula equation referring to another formula column) are not supported"}]},{type:b,value:g}]},{type:b,value:g},{type:a,tag:p,props:{id:J},children:[{type:a,tag:i,props:{ariaHidden:j,href:"#5-click-on-save",tabIndex:k},children:[{type:a,tag:l,props:{className:[m,n]},children:[]}]},{type:b,value:K}]},{type:b,value:g},{type:a,tag:T,props:{id:L},children:[{type:a,tag:i,props:{ariaHidden:j,href:"#available-formula-features",tabIndex:k},children:[{type:a,tag:l,props:{className:[m,n]},children:[]}]},{type:b,value:M}]},{type:b,value:g},{type:a,tag:p,props:{id:N},children:[{type:a,tag:i,props:{ariaHidden:j,href:"#functions",tabIndex:k},children:[{type:a,tag:l,props:{className:[m,n]},children:[]}]},{type:b,value:O}]},{type:b,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:a,tag:u,props:{},children:[{type:a,tag:v,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:"Name"}]},{type:a,tag:h,props:{},children:[{type:b,value:"Syntax"}]},{type:a,tag:h,props:{},children:[{type:b,value:w}]},{type:a,tag:h,props:{},children:[{type:b,value:"Output"}]},{type:a,tag:h,props:{},children:[{type:b,value:"Minimum arguments"}]}]}]},{type:a,tag:x,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"AVG"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"AVG(value1, [value2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"AVG(Column1, Column1)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Average of input parameters"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"ADD"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"ADD(value1, [value2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"ADD(Column1, Column1)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Sum of input parameters"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"CONCAT"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"CONCAT(value1, [value2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"CONCAT(FirstName, ' ', LastName)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Concatenated string of input parameters"}]},{type:a,tag:c,props:{},children:[{type:b,value:q}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"TRIM"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"TRIM(value)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"TRIM(Title)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Removes trailing and leading whitespaces from input parameter"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"UPPER"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"UPPER(value)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"UPPER(Title)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Upper case converted string of input parameter"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"LOWER"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LOWER(value)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LOWER(Title)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Lower case converted string of input parameter"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"LEN"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LEN(value)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LEN(Title)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Input parameter charachter length"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"MIN"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MIN(value1, [value2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MIN(Column1, Column2, Column3)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Minimum value amongst input parameters"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"MAX"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MAX(value1, [value2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MAX(Column1, Column2, Column3)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Maximum value amongst input parameters"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"CEILING"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"CEILING(value)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"CEILING(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Rounded next largest integer value of input parameter"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"FLOOR"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"FLOOR(value)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"FLOOR(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Rounded largest integer less than or equal to input parameter"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"ROUND"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"ROUND(value)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"ROUND(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Nearest integer to the input parameter"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"MOD"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MOD(value1, value2)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MOD(Column, 2)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Remainder after integer division of input parameters"}]},{type:a,tag:c,props:{},children:[{type:b,value:q}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"REPEAT"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"REPEAT(value1, count)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"REPEAT(Column, 2)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Specified copies of the input parameter string concatenated together"}]},{type:a,tag:c,props:{},children:[{type:b,value:q}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"LOG"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LOG(value1, [base])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LOG(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Logarithm of input parameter to the base specified"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"EXP"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"EXP(value)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"EXP(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Exponential value of input parameter ("},{type:a,tag:d,props:{},children:[{type:b,value:"e^x"}]},{type:b,value:")"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"POWER"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"POWER(base, exponent)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"POWER(Column, 3)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"base"}]},{type:b,value:" to the "},{type:a,tag:d,props:{},children:[{type:b,value:"exponent"}]},{type:b,value:" power, as in "},{type:a,tag:d,props:{},children:[{type:b,value:"base^exponent"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:q}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"SQRT"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SQRT(value)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SQRT(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Square root of the input parameter"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"ABS"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"ABS(value)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"ABS(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Absolute value of the input parameter"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"NOW"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:U}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:U}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Current date time"}]},{type:a,tag:c,props:{},children:[{type:b,value:"0"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"REPLACE"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"REPLACE(value, old_str,new_str)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"REPLACE(Column, old_string, new_String)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"String, after replacing all occurrences of "},{type:a,tag:d,props:{},children:[{type:b,value:"old_string"}]},{type:b,value:" with "},{type:a,tag:d,props:{},children:[{type:b,value:"new_String"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:s}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"SEARCH"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SEARCH(value, search_val)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SEARCH(Column, 'str')"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Index of sub-string specified if found, 0 otherwise"}]},{type:a,tag:c,props:{},children:[{type:b,value:q}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"INT"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"INT(value)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"INT(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Integer value of input parameter"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"RIGHT"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"RIGHT(value, count)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"RIGHT(Column, 3)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:V}]},{type:b,value:" characters from the end of input parameter"}]},{type:a,tag:c,props:{},children:[{type:b,value:q}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"LEFT"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LEFT(value1, [value2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LEFT(Column, 3)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:V}]},{type:b,value:" characters from the beginning of input parameter"}]},{type:a,tag:c,props:{},children:[{type:b,value:q}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:W}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:X}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SUBSTR(Column, 3, 2)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Substring of length 'count' of input string, from the postition specified"}]},{type:a,tag:c,props:{},children:[{type:b,value:s}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"MID"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:X}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MID(Column, 3, 2)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Alias for "},{type:a,tag:d,props:{},children:[{type:b,value:W}]}]},{type:a,tag:c,props:{},children:[{type:b,value:s}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"IF"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"IF(expression, success_case, [else_case])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"IF(Column \u003E 1, Value1, Value2)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"success_case if expression evaluates to TRUE, else_case otherwise"}]},{type:a,tag:c,props:{},children:[{type:b,value:q}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"SWITCH"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SWITCH(expression, [pattern,value,..., default_value])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SWITCH(Column1, 1, 'One', 2, 'Two', '--')"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Switch case value based on expression output"}]},{type:a,tag:c,props:{},children:[{type:b,value:s}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"AND"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"AND(expression1, [expression2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"AND(Column \u003E 2, Column \u003C 10)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"TRUE if all expressions evaluate to TRUE"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"OR"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"OR(expression1, [expression2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"OR(Column \u003E 2, Column \u003C 10)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"TRUE if at least one expression evaluates to TRUE"}]},{type:a,tag:c,props:{},children:[{type:b,value:f}]}]}]}]},{type:b,value:g},{type:a,tag:p,props:{id:P},children:[{type:a,tag:i,props:{ariaHidden:j,href:"#numeric-operators",tabIndex:k},children:[{type:a,tag:l,props:{className:[m,n]},children:[]}]},{type:b,value:Q}]},{type:b,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:a,tag:u,props:{},children:[{type:a,tag:v,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:Y}]},{type:a,tag:h,props:{},children:[{type:b,value:w}]},{type:a,tag:h,props:{},children:[{type:b,value:Z}]}]}]},{type:a,tag:x,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"+"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 + column2 + 2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Addition of numeric values"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:_}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 - column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Subtraction of numeric values"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"*"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 * column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Multiplication of numeric values"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:_}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 \u002F column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Division of numeric values"}]}]}]}]},{type:b,value:g},{type:a,tag:p,props:{id:R},children:[{type:a,tag:i,props:{ariaHidden:j,href:"#logical-operators",tabIndex:k},children:[{type:a,tag:l,props:{className:[m,n]},children:[]}]},{type:b,value:S}]},{type:b,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:a,tag:u,props:{},children:[{type:a,tag:v,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:h,props:{},children:[{type:b,value:Y}]},{type:a,tag:h,props:{},children:[{type:b,value:w}]},{type:a,tag:h,props:{},children:[{type:b,value:Z}]}]}]},{type:a,tag:x,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"\u003C"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 \u003C column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Less than"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"\u003E"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 \u003E column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Greater than"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"\u003C="}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 \u003C= column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Less than or equal to"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"\u003E="}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 \u003E= column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Greater than or equal to"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"=="}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 == column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Equal to"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"!="}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 != column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Not equal to"}]}]}]}]}]},dir:"\u002Fen\u002Fsetup-and-usages",path:"\u002Fen\u002Fsetup-and-usages\u002Fformulas",extension:".md",createdAt:$,updatedAt:$,to:"\u002Fsetup-and-usages\u002Fformulas"},prev:{slug:"rollup",title:"Rollup",to:"\u002Fsetup-and-usages\u002Frollup"},next:{slug:"user-management",title:"User Management - Team & Auth Roles & Permissions",to:"\u002Fsetup-and-usages\u002Fuser-management"}}],fetch:{},mutations:[]}}("element","text","td","code","tr","1","\n","th","a","true",-1,"span","icon","icon-link",3,"h3","2","li","3","Formulas","table","thead","Sample","tbody","adding-formula-column",2,"Adding formula column","1-click-on--add-column","1. Click on '+' (Add column)","2-populate-column-name","2. Populate column Name","3-select-column-type-as-formula","3. Select column Type as 'Formula'","4-insert-required-formula","4. Insert required formula","5-click-on-save","5. Click on 'Save'","available-formula-features","Available Formula Features","functions","Functions","numeric-operators","Numeric Operators","logical-operators","Logical operators","h2","NOW()","n","SUBSTR","SUBTR(value, position, [count])","Operator","Description","-","2022-01-13T08:31:21.530Z")));