__NUXT_JSONP__("/setup-and-usages/formulas", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K){return {data:[{document:{slug:"formulas",description:m,title:m,position:43,category:"Usage",menuTitle:m,toc:[{id:v,depth:2,text:w},{id:x,depth:n,text:y},{id:z,depth:n,text:A},{id:B,depth:n,text:C}],body:{type:"root",children:[{type:a,tag:"h2",props:{id:v},children:[{type:a,tag:g,props:{ariaHidden:h,href:"#available-formula-features",tabIndex:i},children:[{type:a,tag:j,props:{className:[k,l]},children:[]}]},{type:b,value:w}]},{type:b,value:o},{type:a,tag:p,props:{id:x},children:[{type:a,tag:g,props:{ariaHidden:h,href:"#functions",tabIndex:i},children:[{type:a,tag:j,props:{className:[k,l]},children:[]}]},{type:b,value:y}]},{type:b,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:a,tag:q,props:{},children:[{type:a,tag:r,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:f,props:{},children:[{type:b,value:"Name"}]},{type:a,tag:f,props:{},children:[{type:b,value:"Syntax"}]},{type:a,tag:f,props:{},children:[{type:b,value:s}]},{type:a,tag:f,props:{},children:[{type:b,value:t}]}]}]},{type:a,tag:u,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"AVG"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"AVG(value1, [value2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"AVG(Column1, Column1)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Calculates the average of provided values and it requires minimum 1 argument"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"ADD"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"ADD(value1, [value2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"ADD(Column1, Column1)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Calculates the sum of provided values and requires a minimum of 1 argument"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"CONCAT"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"CONCAT(value1, [value2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"CONCAT(FirstName, ' ', LastName)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Outputs concatenated string of provided arguments"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"TRIM"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"TRIM(value1)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"TRIM(Title)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Removes trailing and leading whitespaces"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"UPPER"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"UPPER(value1)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"UPPER(Title)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Converts provided string arguments to upper case"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"LOWER"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LOWER(value1)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LOWER(Title)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Converts provided string arguments to lower case"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"LEN"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LEN(value)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LEN(Title)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Outputs provided arguments character length"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"MIN"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MIN(value1, [value2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MIN(Column1, Column2, Column3)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Outputs lowest value among provided arguments"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"MAX"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MAX(value1, [value2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MAX(Column1, Column2, Column3)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Outputs greatest value among provided arguments"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"CEILING"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"CEILING(value1)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"CEILING(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Rounds a number up to the next largest integer value"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"FLOOR"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"FLOOR(value1)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"FLOOR(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Outputs the largest integer which is less than or equal to the provided"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"ROUND"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"ROUND(value1)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"ROUND(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Outputs the nearest integer to the provided value"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"MOD"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MOD(value1, value2)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MOD(Column, 2)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Outputs the remainder after integer division, it requires 2 arguments"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"REPEAT"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"REPEAT(value1, count)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"REPEAT(Column, 2)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Generate a specified number of copies of the string concatenated together"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"LOG"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LOG(value1, [base])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LOG(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Outputs logarithm of a value"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"EXP"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"EXP(value1)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"EXP(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Outputs the exponential value of a number ("},{type:a,tag:d,props:{},children:[{type:b,value:"e^x"}]},{type:b,value:")"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"POWER"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"POWER(base, exponent)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"POWER(Column, 3)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Outputs the "},{type:a,tag:d,props:{},children:[{type:b,value:"base"}]},{type:b,value:" to the "},{type:a,tag:d,props:{},children:[{type:b,value:"exponent"}]},{type:b,value:" power, as in "},{type:a,tag:d,props:{},children:[{type:b,value:"base^exponent"}]}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"SQRT"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SQRT(value1)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SQRT(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Outputs square root of the value"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"ABS"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"ABS(value1)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"ABS(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Provides absolute value of the value"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"NOW"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:D}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:D}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Use to get current date time"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"REPLACE"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"REPLACE(value1, old_str,new_str)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"REPLACE(Column, old_string, new_String)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Replaces all occurrences of "},{type:a,tag:d,props:{},children:[{type:b,value:"old_string"}]},{type:b,value:" with "},{type:a,tag:d,props:{},children:[{type:b,value:"new_String"}]},{type:b,value:" and returns the new string"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"SEARCH"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SEARCH(value1, search_val)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SEARCH(Column, 'str')"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Search for a string and returns the index of the string position"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"INT"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"INT(value1)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"INT(Column)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Converts the value to integer and returns"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"RIGHT"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"RIGHT(value1, count)"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"RIGHT(Column, 3)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:E},{type:a,tag:d,props:{},children:[{type:b,value:F}]},{type:b,value:" characters from the ending of string"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"LEFT"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LEFT(value1, [value2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"LEFT(Column, 3)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:E},{type:a,tag:d,props:{},children:[{type:b,value:F}]},{type:b,value:" characters from the sbeginning of string"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:G}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:H}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SUBSTR(Column, 3, 2)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Extract substring from a string"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"MID"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:H}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MID(Column, 3, 2)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"It's an alias for "},{type:a,tag:d,props:{},children:[{type:b,value:G}]}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"IF"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MIN(expression, success_case, [else_case])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"IF(Column \u003E 1, Value1, Value2)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"If condition satisfies it return "},{type:a,tag:d,props:{},children:[{type:b,value:"Value1"}]},{type:b,value:" or it returns "},{type:a,tag:d,props:{},children:[{type:b,value:"Value2"}]}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"SWITCH"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"MIN(expression, [pattern,value,..., default_value])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"SWITCH(Column1, 1, 'One', 2, 'Two', '--')"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Based on pattern match it return corresponding values"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"AND"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"AND(expression1, [expression2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"AND(Column \u003E 2, Column \u003C 10)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Checks all conditions are satisfying"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"OR"}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"OR(expression1, [expression2,...])"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"OR(Column \u003E 2, Column \u003C 10)"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Checks at least  one condition is satisfying"}]}]}]}]},{type:b,value:o},{type:a,tag:p,props:{id:z},children:[{type:a,tag:g,props:{ariaHidden:h,href:"#numeric-operators",tabIndex:i},children:[{type:a,tag:j,props:{className:[k,l]},children:[]}]},{type:b,value:A}]},{type:b,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:a,tag:q,props:{},children:[{type:a,tag:r,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:f,props:{},children:[{type:b,value:I}]},{type:a,tag:f,props:{},children:[{type:b,value:s}]},{type:a,tag:f,props:{},children:[{type:b,value:t}]}]}]},{type:a,tag:u,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"+"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 + column2 + 2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Addition of numeric values"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:J}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 - column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Subtraction of numeric values"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"*"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 * column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Multiplication of numeric values"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:J}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 \u002F column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Divide numeric values"}]}]}]}]},{type:b,value:o},{type:a,tag:p,props:{id:B},children:[{type:a,tag:g,props:{ariaHidden:h,href:"#logical-operators",tabIndex:i},children:[{type:a,tag:j,props:{className:[k,l]},children:[]}]},{type:b,value:C}]},{type:b,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:a,tag:q,props:{},children:[{type:a,tag:r,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:f,props:{},children:[{type:b,value:I}]},{type:a,tag:f,props:{},children:[{type:b,value:s}]},{type:a,tag:f,props:{},children:[{type:b,value:t}]}]}]},{type:a,tag:u,props:{},children:[{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"\u003C"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 \u003C column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Less than"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"\u003E"}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 \u003E column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Greater than"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"\u003C="}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 \u003C= column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Less than or equal to"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"\u003E="}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 \u003E= column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Greater than or equal to"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"=="}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 == column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Equal to"}]}]},{type:a,tag:e,props:{},children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"!="}]}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{},children:[{type:b,value:"column1 != column2"}]}]},{type:a,tag:c,props:{},children:[{type:b,value:"Not equal to"}]}]}]}]}]},dir:"\u002Fen\u002Fsetup-and-usages",path:"\u002Fen\u002Fsetup-and-usages\u002Fformulas",extension:".md",createdAt:K,updatedAt:K,to:"\u002Fsetup-and-usages\u002Fformulas"},prev:{slug:"rollup",title:"Rollup",to:"\u002Fsetup-and-usages\u002Frollup"},next:{slug:"audit",title:"Audit",to:"\u002Fsetup-and-usages\u002Faudit"}}],fetch:{},mutations:[]}}("element","text","td","code","tr","th","a","true",-1,"span","icon","icon-link","Formulas",3,"\n","h3","table","thead","Sample","Description","tbody","available-formula-features","Available Formula Features","functions","Functions","numeric-operators","Numeric Operators","logical-operators","Logical operators","NOW()","Extracts ","n","SUBSTR","SUBTR(value1, position, [count])","Operator","-","2021-10-04T15:12:18.853Z")));